/*! firebase-admin v4.0.1
    https://developers.google.com/terms */
/// <reference types="node" />
/// <reference types="chai" />
/** Error code type. */
declare type ErrorCode = 'INVALID_ARGUMENT' | 'EMAIL_ALREADY_EXISTS' | 'INTERNAL_ERROR' | 'INVALID_CREDENTIAL' | 'INVALID_DISABLED_FIELD' | 'INVALID_DISPLAY_NAME' | 'INVALID_EMAIL_VERIFIED' | 'INVALID_EMAIL' | 'INVALID_PASSWORD' | 'INVALID_PHOTO_URL' | 'INVALID_SERVICE_ACCOUNT' | 'INVALID_UID' | 'MISSING_UID' | 'OPERATION_NOT_ALLOWED' | 'PROJECT_NOT_FOUND' | 'UID_ALREADY_EXISTS' | 'USER_NOT_FOUND';
/**
 * Defines error info type. This includes a code and message string.
 */
declare type ErrorInfo = {
    code: string;
    message: string;
};
/**
 * Type that represents a map that stores all error codes (ErrorInfo enum).
 */
declare type ErrorCodeMap = {
    [code: ErrorCode]: ErrorInfo;
};
/**
 * Firebase error code structure. This extends Error.
 *
 * @param {ErrorInfo} errorInfo The error information (code and message).
 * @constructor
 */
declare class FirebaseError extends Error {
    private errorInfo;
    constructor(errorInfo: ErrorInfo);
    /** @return {string} The error code. */
    readonly code: string;
    /** @return {string} The error message. */
    readonly message: string;
    /** @return {Object} The object representation of the error. */
    toJSON(): Object;
}
/**
 * Firebase Auth error code structure. This extends FirebaseError.
 *
 * @param {ErrorInfo} info The error code info.
 * @param {string} [message] The error message. This will override the default
 *     message if provided.
 * @constructor
 */
declare class FirebaseAuthError extends FirebaseError {
    /**
     * Creates the developer facing error corresponding to the backend error code.
     *
     * @param {string} serverErrorCode The server error code.
     * @param {string} [message] The error message. The default message is used
     *     if not provided.
     * @return {FirebaseAuthError} The corresponding developer facing error.
     */
    static fromServerError(serverErrorCode: string, message?: string): FirebaseAuthError;
    constructor(info: ErrorInfo, message?: string);
}
/** @const {ErrorCodeMap} Auth client error codes and their default messages. */
declare const AUTH_CLIENT_ERROR_CODE: ErrorCodeMap;
export { ErrorCode, ErrorCodeMap, ErrorInfo, FirebaseError, FirebaseAuthError, AUTH_CLIENT_ERROR_CODE };
